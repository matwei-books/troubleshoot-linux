
# Glossar

BIOS

Bootstrapping

Dateibaum
: [siehe Dateisystem](#glossar-dateisystem)

{#glossar-dateisystem}
Dateisystem
: Ein Dateisystem beschreibt die Organisation der Datenablage auf einem
  Datenträger.
  Der Hauptzweck für den Benutzer ist die Zuordnung eines Dateinamens innerhalb
  des Dateisystems zu den entsprechenden Datenblöcken und Metadaten.
  Abhängig von der Art des Datenträgers und dem Einsatzzweck des Dateisystems
  kommen verschiedene Arten von Dateisystemen zum Einsatz.
  In [Kapitel 4](#sec-linux-grundlagen-dateien) gehe ich näher auf den
  Zusammenhang von Dateisystemen und Dateien ein.

{#glossar-datenbank}
Datenbank
: Eine Datenbank ist ein System zur elektronischen Datenverwaltung.
  Dabei unterscheidet man die Software, auch Datenbankmanagementsystem (DBMS)
  genannt, von der Datenbank im engeren Sinne, den Daten.
  Die Daten in einem Datenbanksystem bestehen aus den Nutzerdaten und den
  Verwaltungsdaten, die man Metadaten nennt.
  Es gibt verschiedene Datenbankmodelle wie zum Beispiel hierarchische
  Modelle, die in Dateisystemen verwendet werden, netzwerkartige
  Modelle, die wir beim DNS finden, oder dokumentenorientierte Modelle,
  wie Mailboxen.
  Neben den genannten gibt es noch andere, im Rahmen dieses Buches weniger
  relevante Datenbankmodelle, außerdem können Mischformen auftreten.

Direct Rendering Manager

Firmware

{#glossar-geraetedatei}
Gerätedatei
: Über Gerätedateien erlaubt der Kernel normalen Anwenderprogrammen den
  Zugriff auf die Hardware des Systems.
  Dabei können die Gerätedateien wie
  [reguläre Dateien](#glossar-regulaere-datei) verwendet werden.
  Man unterscheidet blockorientierte und zeichenorientierte Gerätedateien.
  Ursprünglich wurden Gerätedateien mit dem Programm `mknod` angelegt.
  Später übernahm *devfs* das dynamische Erzeugen von Gerätedateien.
  In modernen Linuxsystemen werden Gerätedateien mit *udev* verwaltet.
  In [Kapitel 4](#sec-linux-grundlagen-dateien) gehe ich näher auf die
  Zusammenhänge von Dateien und Dateisystemen ein.

Initramfs

{#glossar-inode}
Inode
: Ein Inode (von engl. *index node*) ist ein Eintrag in einem
  [Dateisystem](#glossar-dateisystem), der die Verwaltungsinformationen
  (Metadaten) für die zugehörige Datei enthält.
  In [Kapitel 4](#sec-linux-grundlagen-dateien) gehe ich auf die Zusammenhänge
  von Dateien, Inodes und Verzeichnissen detaillierter ein.

Kernel

Kernel-Oops

Kernel-Panik

{#glossar-kommandozeile}
Kommandozeile
: Jedes UNIX-Programm erhält beim Aufruf eine Reihe von positionsabhängigen
  Parametern.
  Diese werden als Zeichenreihen übergeben, welche jeweils durch das Zeichen
  `\0` abgeschlossen werden.
  Beim Aufruf eines Programms aus einer Shell kann die Kommandozeile aus einer
  oder mehreren Textzeilen zusammengebaut werden.
  In [Kapitel 4](#sec-unix-programmschnittstellen) gehe ich im Rahmen der
  Programmschnittstellen auf die Kommandozeile ein.

Korrelation
: Eine Korrelation beschreibt eine Beziehung zwischen zwei Merkmalen,
  Ereignissen oder Zuständen.
  Ob die Beziehung kausal ist und falls ja, wie, geht aus der Korrelation
  nicht hervor.

Link
: Ein Link ist ein Verweis auf einen [Inode](#glossar-inode) in einem
  Dateisystem.
  Die meisten Links sind Einträge in [Dateisystemen](#glossar-dateisystem),
  die einen Namen in einem Verzeichnis mit einem Inode verknüpfen,
  diese werden auch Hardlinks genannt.
  Neben den Hardlinks gibt es symbolische Links, auch Softlink genannt, die
  nicht auf einen Inode verweisen, sondern auf einen anderen Dateinamen.
  Für weitere Informationen zu Dateien, Verzeichnissen und Links
  [siehe Kapitel 4](#sec-linux-grundlagen-dateien).

Live-System

{#glossar-log}
Log, Logdatei, Logfile
: Traditionell werden die Systemnachrichten auf Linux-Systemen als
  Textdateien mit zeilenweisen Einträgen geführt.
  Diese Zeilen enthalten neben der Nachricht das Datum und die Uhrzeit,
  den Namen oder die Adresse des Rechners und den Namen und die PID des
  Prozesses, der die Lognachricht erzeugte.
  Damit nicht alle Programme dieselbe Datei zum Schreiben öffnen müssen, gibt
  es auf den Systemen einen [Syslog](#glossar-syslog)-Dienst, dem sie die
  Lognachrichten mittels Bibliotheksfunktionen übergeben.
  Dabei kann den Nachrichten eine Priorität und ein Bereich zugewiesen
  werden.

Magic SysRequest

Master Boot Record, MBR

NFS

Paging

Partitionstabelle

Peripherie

{#glossar-programm}
Programm
: Ein Programm ist eine Folge von Anweisungen, die den Regeln einer
  Programmiersprache genügen und es einem Computer ermöglichen,
  eine bestimmte Aufgabe zu bewältigen.
  Dabei unterscheidet man Programme im Maschinencode, die nach dem Laden
  in den Arbeitsspeicher direkt vom Prozessor des Computers abgearbeitet
  werden können, von Programmen in "höheren" Programmiersprachen, die vor der
  Abarbeitung durch den Prozessor erst in Maschinencode übersetzt werden oder
  durch spezielle Programme interpretiert werden.
  In [Kapitel 4](#sec-unix-prozessmodell) gehe ich näher auf den Zusammenhang
  von Programmen und Prozessen ein.

{#glossar-prozess}
Prozess
: Im Betriebssystem ist ein Prozess ein Vorgang der Informationsverarbeitung.
  Dieser benötigt Rechenzeit an mindestens einem Prozessor, ein Programm,
  dessen Anweisungen er ausführt, Speicherplatz für temporäre Daten und einen
  Kontext, der unter anderem auf die verarbeiteten Daten verweist.
  Der Prozess wird durch das Programm gesteuert und durch den Kontext und die
  verarbeiteten Daten beeinflusst.
  [Kapitel 4](#sec-unix-prozessmodell) geht näher auf das UNIX-Prozessmodell
  ein.

PXE

{#glossar-regulaere-datei}
reguläre Datei
: Eine reguläre Datei enthält permanente Daten, die als Bitfolge in einem
  [Dateisystem](#glossar-dateisystem) auf einem Datenträger
  gespeichert werden.
  Die Verwaltungsinformationen für die Datei werden in einem
  [Inode](#glossar-inode) abgelegt.
  Ein und dieselbe reguläre Datei kann mehrere Namen haben, die als Link auf
  den zugehörigen Inode in den [Verzeichnissen](#glossar-verzeichnis) des
  Dateisystems geführt werden.
  In [Kapitel 4](#sec-linux-grundlagen-dateien) gehe ich auf die Zusammenhänge
  von Dateien und Verzeichnissen detaillierter ein.

Rescue-System

Shell

Signal
: Ein Signal ist eine primitive Form der Kommunikation zwischen Prozessen.
  Um ein Signal zu senden, wird der *kill()* Systemaufruf beziehungsweise in
  der Kommandozeile der *kill* Befehl verwendet.
  Der sendende Prozess benötigt bestimmte Rechte, um einem anderen Prozess ein
  Signal zu senden.
  Im Rahmen des UNIX-Prozessmodells gehe ich in
  [Kapitel 4](#sec-unix-prozessmodell) näher auf Signale ein.

Standardausgabe, -eingabe, fehlerausgabe
: Diese drei Standard-Datenströme im Betriebssystem UNIX werden auch *STDIN*,
  *STDOUT* und *STDERR* genannt.
  Beim Start von Programmen werden diesen Datenströmen die Dateideskriptoren
  0, 1 und 2 zugeordnet.
  An einem Textterminal ist STDIN meist mit der Tastatur verbunden und STDOUT
  und STDERR mit dem Display.

  Programme , die als Filter in einer Pipe verkettet werden, lesen ihre
  Eingabe von STDIN und schreiben die verarbeiteten Daten nach STDOUT und
  Fehlermeldungen nach STDERR.
  In den gängigen Shells können diese Datenströme durch Eingabeumleitung
  (`<`), Ausgabeumleitung (`>`) oder Verknüpfung (`|`) mit Dateien oder
  Programmen verbunden werden.
  In [Kapitel 4](#sec-unix-programmschnittstellen) gehe ich bei den
  Programmschnittstellen näher auf die Datenströme ein.

Swap, Swapping

{#glossar-syslog}
Syslog
: Der Syslog-Dienst auf einem Rechner nimmt am UNIX-Socket */dev/log*
  [Lognachrichten](#glossar-log) entgegen und schreibt sie entsprechend
  seiner Konfiguration, der Priorität und dem Bereich in Dateien im
  Verzeichnis */var/log/*.
  Einige Syslog-Dämonen schreiben die Lognachrichten stattdessen in
  Datenbanken oder in Ringpuffer im Hauptspeicher.
  Letztere sind vor allem für Systeme mit geringen Ressourcen interessant,
  verlieren aber ältere Nachrichten, wenn der Ringpuffer voll ist und neue
  Nachrichten kommen.
  Zusätzlich besteht die Möglichkeit, das der Syslog-Dämon über UDP-Port 514
  Lognachrichten an andere Rechner sendet oder von anderen Rechnern
  entgegennimmt.

TFTP

Thrashing

Umgebungsvariablen
: Neben den Variablen, die ein Programm beim Aufruf in der
  [Kommandozeile](#glossar-kommandozeile) übergeben bekommt, erhält es weitere
  Variablen in der Aufrufumgebung.
  Im Unterschied zur Kommandozeile, deren Variablen über ihre Position
  verwendet werden, werden Umgebungsvariablen über ihren Namen identifiziert.
  [Kapitel 4](#sec-unix-programmschnittstellen) geht im Rahmen der
  Programmschnittstellen auf Umgebungsvariablen ein.

{#glossar-verzeichnis}
Verzeichnis
: Ein Verzeichnis ist eine spezielle Art von Dateien in einem
  [Dateisystem](#glossar-dateisystem), die nur Dateinamen, gepaart mit der
  Referenz auf die zugehörigen [Inodes](#glossar-inode) enthalten.
  [Kapitel 4](#sec-linux-grundlagen-dateien) dieses Buches geht näher auf das
  Verhältnis von Dateien und Verzeichnissen in Dateisystemen ein.

VGA

Virtualisierung
