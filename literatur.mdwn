{backmatter}

# Literatur

## Bücher

##### CT2000 {#bib-ct2000}
Christiansen, Tom and Torkington, Nathan;
Perl Kochbuch; O'Reilly, Köln, 2000;  
ISBN: 3-89721-140-8

Neben dem Kamel-Buch (*Programmieren mit Perl*) ist das für mich das
wichtigste Buch bei der Arbeit mit Perl.
Der Vorteil dieses Buches, vom Standpunkt der Fehlersuche, ist die
Darbietung als anwendungsbereite Rezepte, so dass ich mich auf das zu
lösende Problem konzentrieren kann und nicht auf die subtilen Feinheiten
der Programmiersprache umschalten muss.

##### Edwards2012 {#bib-edwards2012}

Edwards, Betty;
Das neue GARANTIERT ZEICHNEN LERNEN: Die Befreiung unserer schöpferischen
Gestaltungskräfte; Rowohlt, Reinbek bei Hamburg, 2012;  
ISBN: 978-3-498-01669-2

Dieses Buch hat vordergründig rein gar nichts mit Fehlersuche zu tun.
Betty Edwards gibt in diesem Buch einige Tipps zum Umschalten der
verschiedenen Gehirn-Modi, konkret zwischen dem logisch-analytischen und dem
bildlich-intuitiven Denken.
Für die erfolgreiche Fehlersuche insbesondere bei schwierigen Problemen ist es
vorteilhaft mit beiden Modi souverän umzugehen.
Dabei kann dieses Buch helfen.

##### Foessmeier1991 {#bib-foessmeier1991}

Fößmeier, Reinhard;
Die Schnittstellen von UNIX-Programmen: Tips zur Programm-Organisation unter
UNIX; Springer, Berlin Heidelberg New York London Paris Tokyo Hong Kong
Barcelona, 1991;  
ISBN: 3-540-53521-7

Eigentlich eher für Programmierer, die Software für UNIX schreiben, gedacht,
war dieses Buch eine Offenbarung für mich um zu verstehen, wie Programme
unter UNIX (und Linux) kommunizieren.

##### Kahneman2011 {#bib-kahneman2011}

Kahneman, Daniel;
Thinking, fast and slow;
Anchor Canada, 2013;  
ISBN: 978-0-385-67653-3

Noch ein Buch, das sich mit den Gegebenheiten und Wechselwirkungen der
verschiedenen Gehirn-Modi befasst.
Nicht direkt zum Thema Fehlersuche, aber sehr erhellend darüber, warum und wie
man sich immer wieder selbst an der Nase herumführt.

##### Loukides1996 {#bib-loukides1996}

Loukides, Mike Kosta;
System Performance Tuning; O'Reilly, Sebastopol, 1996;  
ISBN 0-937175-60-9

Obwohl schon etwas älter, führt dieses Buch doch grundlegend in das Gebiet des
Performance-Tuning von UNIX-Systemen ein. 2002 gab es eine zweite Auflage mit
Gian-Paolo D. Musumeci als Koautor.

##### Sloan2001 {#bib-sloan2001}

Sloan, Joseph D.;
Network troubleshooting tools;
O'Reilly, Sebastopol, 2001;  
ISBN 978-0-596-00186-5

Dieses Buch stellt etliche Werkzeuge für die Fehlersuche vor und zeigt wie man
mit relativ einfachen Werkzeugen komplexe Fragen beantworten kann.

##### Weidner2012 {#bib-weidner2012}
Weidner, Mathias; Linux kopflos mit PC Engines ALIX;
Lulu Press, Raleigh, 2012;  
ISBN 978-1-4717-2849-5

Ein Buch über kleine lüfterlose Rechner, auf denen man mit Linux verschiedene
Projekte realisieren kann.
Das Buch geht unter anderem auf verschiedene Probleme unter dem Aspekt
begrenzter Ressourcen ein.

## Artikel in Zeitschriften, Proceedings, ...

##### Bartsch2013 {#bib-bartsch2013}
Bartsch, Michael; Service Level Agreements - rechtliche Aspekte;
Informatik-Spektrum, Volume 36, Ausgabe 5, Oktober 2013, S. 449ff;  
DOI 10.1007/s00287-013-0712-1

In diesem Beitrag für Nichtjuristen geht der Autor in verständlicher Form auf
die rechtlichen Aspekte von Service Level Agreements als Bestandteil von
IT-Verträgen ein.

##### Bonwick1994 {#bib-bonwick1994}
Bonwick, Jeff; The slab allocator: an object-caching kernel memory
allocator; Proceedings of the USENIX Summer 1994 Technical Conference on
USENIX Summer 1994 Technical Conference - Volume 1, S. 6

##### Koenig2012 {#bib-koenig2012}
König, Harald; strace für Linux-Versteher; UpTimes - Mitgliederzeitschrift
der German Unix User Group; Ausgabe 2012/1, S. 61ff

Harald König zeigt in seinem Artikel welche Informationen über ein
Linux-Programm er mit *strace* gewinnen kann.

##### WSA2011 {#bib-wsa2011}
Weigend, Johannes and Siedersleben, Johannes and Adersberger, Josef;
Dynamische Analyse mit dem Software-EKG; Informatik-Spektrum, Volume 34,
Ausgabe 5, Oktober 2011, S. 484ff;  
DOI 10.1007/s00287-011-0541-z

In diesem Papier zeigen die Autoren, wie man komplexe heterogene Systeme
analysieren kann, wenn man mit einfachen Methoden nicht weiter kommt.

## Online-Quellen

##### POSIX.1-2008 {#bib-posix1-2008}
IEEE and The Open Group; The Open Group Technical Standard Base
Specifications, Issue 7;
POSIX.1-2008 / IEEE Std. 1003.1™-2008;
<http://pubs.opengroup.org/onlinepubs/9699919799/>  
Aufgerufen: 2013-11-29

POSIX.1-2008 definiert eine Standardschnittstelle und -umgebung für
Betriebssysteme, einschließlich eines Befehlsinterpreters (Shell) und
allgemeiner Hilfsprogramme um die Portabilität von Anwendungen auf der Ebene
des Quellcodes zu unterstützen.

##### POSIX.FileCap {#bib-web-posix-capabilities}
Chris Friedhoff;
POSIX Capabilities & File POSIX Capabilities;
<http://www.friedhoff.org/posixfilecaps.html>
Aufgerufen: 2013-12-20

Dieser Artikel, 2008 geschrieben, führt mit praktischen Beispielen in den
Umgang mit POSIX Capabilities ein.
